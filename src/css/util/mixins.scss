@mixin pseudo($display: block, $pos: absolute, $content: ''){
  content: $content;
  display: $display;
  position: $pos;
}

// Padding
@mixin padding($padding-map, $pg-breakpoints: $breakpoints) {
  @each $pg-breakpoint, $padding in $padding-map {
    @if $pg-breakpoint == null {
      padding: $padding;
    }
    @else {
      // If $fs-font-size is a key that exists in
      // $fs-breakpoints, use the value
      @if map-has-key($pg-breakpoints, $pg-breakpoint) {
        $pg-breakpoint: map-get($pg-breakpoints, $pg-breakpoint);
      }
      @media screen and (min-width: $pg-breakpoint) {
        padding: $padding;
      }
    }
  }
}

// Function will map an array to various breakpoints
@mixin map-to-property($property, $map, $map-breakpoints: $breakpoints) {
  @each $map-breakpoint, $value in $map {
    @if $map-breakpoint == null {
      #{$property}: $value;
    }
    @else {
      // If $fs-font-size is a key that exists in
      // $fs-breakpoints, use the value
      @if map-has-key($map-breakpoints, $map-breakpoint) {
        $map-breakpoint: map-get($map-breakpoints, $map-breakpoint);
      }
      @media screen and (min-width: $map-breakpoint) {
        #{$property}: $value;
      }
    }
  }
}

